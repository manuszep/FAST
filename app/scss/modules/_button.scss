/*-------------------------------------------------------*\
    #FAST Button

    @depends on
        - FAST-toolkit
        - FAST-color
\*-------------------------------------------------------*/

/* Variables.
   ===================================================== */

$FAST-button-import: true !default;


/* Functions.
   ===================================================== */


/* Mixins.
   ===================================================== */
@mixin fast-button-fill-color($color: fastColorGet($FAST-button-default-color)) {
    @include fast-background-color($color);
}

@mixin fast-button-bordered($color) {
    color: $color;

    &:hover {
        background-color: $color;
        box-shadow: inset 0 0 0 1px $color;
        color: fastColorContrast($color);
    }
}


/* Placeholders.
   ===================================================== */
%btn {
    @include fast-button-fill-color;
    @include fast-rem(padding, (($FAST-button-height - $FAST-button-line-height) / 2) $FAST-button-padding-h);
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0);
    border-radius: 2px;
    cursor: pointer;
    display: inline-block;
    font-size: .875em;
    line-height: $FAST-button-line-height;
    letter-spacing: 1px;
    opacity: .75;
    text-align: center;
    text-transform: uppercase;
    transition: opacity .2s, box-shadow .3s;

    &:hover {
        box-shadow: inset 0 0 0 1px rgba(0, 0, 0, .2);
        opacity: 1;
        text-decoration: none;
    }
}

%btn-split {
    //@include fast-rem(margin-left, (($FAST-button-height - $FAST-button-line-height) / 2));

    &:before, &:after {
        background-color: rgba(0,0,0,.2);
        border-right: 1px solid rgba(#fff, .6);
        @include fast-rem(margin, -(($FAST-button-height - $FAST-button-line-height) / 2) ($FAST-button-padding-h) (-(($FAST-button-height - $FAST-button-line-height) / 2)) (-$FAST-button-padding-h));
        @include fast-rem(padding, (($FAST-button-height - $FAST-button-line-height) / 2) 0);
        min-width: $FAST-button-height;
        width: 2em;
    }

    &:after {
        @include fast-rem(margin-left, $FAST-button-padding-h);
        @include fast-rem(margin-right, (-$FAST-button-padding-h));
        border-right: none;
        border-left: 1px solid rgba(#fff, .6);
    }
}

/* Styles.
   ===================================================== */
@if $FAST-button-import {
    .btn {
        @extend %btn;
    }

    [class^="btn-border"], [class*=" btn-border"] {
        background-color: transparent;
        border-radius: 3px;
        box-shadow: inset 0 0 0 2px currentColor;
        transition: color .2s, background-color .2s;

        &.btn-tiny {
            box-shadow: inset 0 0 0 1px currentColor;
        }

        &.btn-small {
            box-shadow: inset 0 0 0 1px currentColor;
        }

        &.btn-large {
            box-shadow: inset 0 0 0 3px currentColor;
        }
    }

    .btn-border {
        @include fast-button-bordered(fastColorGet($FAST-button-default-color));
    }

    .btn-small {
        @include fast-rem(padding, (($FAST-button-height - $FAST-button-line-height) / 4) ($FAST-button-padding-h / 2));
        box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0);
        letter-spacing: 0;
        text-transform: none;

        &:hover {
            box-shadow: inset 0 0 0 1px rgba(0, 0, 0, .2);
        }
    }

    .btn-tiny {
        @include fast-rem(padding, (($FAST-button-height - $FAST-button-line-height) / 14) ($FAST-button-padding-h / 2));
        box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0);
        letter-spacing: 0;
        text-transform: none;

        &:hover {
            box-shadow: inset 0 0 0 1px rgba(0, 0, 0, .2);
        }
    }

    .btn-large {
        @include fast-rem(padding, ($FAST-button-height - $FAST-button-line-height) $FAST-button-padding-h * 2);
    }

    .btn.ico-only {
        @include fast-rem(padding, (($FAST-button-height - $FAST-button-line-height) / 2) ($FAST-button-padding-h / 2));
    }

    .btn-split {
        @extend %btn-split;
    }

    .wide, .wide .btn {
        flex-grow: 1;
    }

    .btn-group, .btn-condition {
        @include fast-rem(margin-bottom, $FAST-line-height);
    }

    .btn-group {
        align-items: stretch;
        display: flex;
        flex-wrap: wrap;

        .btn {
            align-content: center;
            align-items: center;
            justify-content: center;
            border-radius: 0;
            display: flex;
            margin-bottom: 1px;
        }
    }

    .btn-condition {
        display: flex;
        position: relative;

        .or {
            background: #fff;
            border-radius: 50%;
            color: fastColorGet("grey-d");
            @include fast-rem(font-size, 12px);
            font-weight: bold;
            @include fast-rem(line-height, 33px);
            text-align: center;
            position: absolute;
            text-transform: uppercase;
            top: 50%;
            transform: translate(-50%,-50%);
            vertical-align: bottom;
            @include fast-rem(width, 33px);
            z-index: 2;
        }

        .btn:first-child {
            margin-right: .1em;
        }

        .btn:last-child {
            margin-left: .1em;
        }

        .btn-small + .or {
            @include fast-rem(font-size, 10px);
            @include fast-rem(line-height, 22px);
            @include fast-rem(width, 22px);
        }
    }

    @each $btn-color in map-get($FAST-data-button, "colors") {
        $name: nth($btn-color, 1);
        $color: nth($btn-color, 2);

        .btn-#{$name} {
            @include fast-button-fill-color($color);
        }

        .btn-border-#{$name} {
            @include fast-button-bordered($color);
        }
    }
}
