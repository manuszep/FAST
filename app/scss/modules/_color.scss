/*-------------------------------------------------------*\
    #FAST Color

    @depends on
        - FAST-Toolkit
\*-------------------------------------------------------*/

/*
 *  Provide colors tools and handling classes
 */

/* Variables.
   ===================================================== */
$FAST-color-import: true !default;

$FAST-color-list: (
   "blue-xxd"        #103184,
   "blue-xd"         #004893,
   "blue-d"          #2253AF,
   "blue"            #0060D6,
   "blue-l"          #4A89DC,
   "blue-xl"         #5D9CEC,

   "cyan"            #3BAFDA,
   "cyan-l"          #4FC1E9,

   "red-d"           #C70000,
   "red"             #E30000,
   "red-l"           #FF1821,

   "orange-d"        #D35400,
   "orange"          #E67E22,

   "yellow-d"        #F6BB42,
   "yellow"          #FFCE54,

   "green-d"         #66AF44,
   "green"           #8CC152,
   "green-l"         #A0D468,

   "turquoise"       #37BC9B,
   "turquoise-l"     #48CFAD,

   "grey-xd"         #333333,
   "grey-d"          #616367,
   "grey"            #999999,
   "grey-l"          #B3B3B3,
   "grey-xl"         #EFEBEA,
   "grey-xxl"        #F2F2F2,

   "cold-grey-xd"    #434A54,
   "cold-grey-d"     #656D78,
   "cold-grey"       #AAB2BD,
   "cold-grey-l"     #CCD1D9,
   "cold-grey-xl"    #E6E9ED,
   "cold-grey-xxl"   #F5F7FA,

   "white"           #fff,
   "black"           #000
) !default;

$FAST-color-text-light: #fff !default;
$FAST-color-text-dark: #333 !default;

$FAST-color-contrast-threshold: 55% !default;

$FAST-color-lightness-gap: 95% !default;

/* Functions.
   ===================================================== */

// Returns a color code by name
@function fast-color-get($name) {
   @return fast-get-list-value-by-name($FAST-color-list, $name);
}

// Provide light or dark color to get an optimal contrast against a background color
@function fast-color-contrast($color, $dark: $FAST-color-text-dark, $light: $FAST-color-text-light, $threshold: $FAST-color-contrast-threshold) {
   @return if(lightness($color) < $threshold, $light, $dark)
}

// Lighten a color with a maximum of $FAST-color-lightness-gap (%) lightness
@function fast-color-safe-lighten($color, $amount) {
   $new-color: lighten($color, $amount);

   @if (lightness($new-color) < $FAST-color-lightness-gap and lightness($new-color) > $FAST-color-lightness-gap) {
      @return hsl(hue($color), saturation($color), $FAST-color-lightness-gap);
   }

   @return lighten($color, $amount);
}

// Sets the lightness of a color without altering other properties
@function fast-color-lightness($color, $lightness) {
   @return hsl(hue($color), saturation($color), $lightness);
}


/* Mixins.
   ===================================================== */

@mixin fast-background-color ($color) {
   background-color: $color;
   color: fast-color-contrast($color);
}


/* Placeholders.
   ===================================================== */


/* Styles.
   ===================================================== */
@if $FAST-color-import {
   @for $i from 1 through length($FAST-color-list) {
      $item: nth($FAST-color-list, $i);
      $name: nth($item, 1);
      $color: nth($item, 2);

      .bg-#{$name} {
         @include fast-background-color($color);
      }

      .color-#{$name} {
         color: $color;
      }
   }
}